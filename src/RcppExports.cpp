// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// H_cpp
arma::mat H_cpp(arma::mat X, arma::mat mcov, bool S_scale_dist, double h);
RcppExport SEXP _shapr_H_cpp(SEXP XSEXP, SEXP mcovSEXP, SEXP S_scale_distSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mcov(mcovSEXP);
    Rcpp::traits::input_parameter< bool >::type S_scale_dist(S_scale_distSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(H_cpp(X, mcov, S_scale_dist, h));
    return rcpp_result_gen;
END_RCPP
}
// distance_cpp
arma::Cube<double> distance_cpp(NumericMatrix Xtrain, NumericMatrix Xtest);
RcppExport SEXP _shapr_distance_cpp(SEXP XtrainSEXP, SEXP XtestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xtest(XtestSEXP);
    rcpp_result_gen = Rcpp::wrap(distance_cpp(Xtrain, Xtest));
    return rcpp_result_gen;
END_RCPP
}
// prepare_gen_Mahlanobis_dist_cpp_old
arma::cube prepare_gen_Mahlanobis_dist_cpp_old(arma::mat Xtrain, arma::mat Xtest, arma::mat mcov);
RcppExport SEXP _shapr_prepare_gen_Mahlanobis_dist_cpp_old(SEXP XtrainSEXP, SEXP XtestSEXP, SEXP mcovSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xtest(XtestSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mcov(mcovSEXP);
    rcpp_result_gen = Rcpp::wrap(prepare_gen_Mahlanobis_dist_cpp_old(Xtrain, Xtest, mcov));
    return rcpp_result_gen;
END_RCPP
}
// gen_Mahlanobis_dist_cpp
arma::cube gen_Mahlanobis_dist_cpp(Rcpp::List featureList, arma::mat Xtrain, arma::mat Xtest, arma::mat mcov, bool S_scale_dist);
RcppExport SEXP _shapr_gen_Mahlanobis_dist_cpp(SEXP featureListSEXP, SEXP XtrainSEXP, SEXP XtestSEXP, SEXP mcovSEXP, SEXP S_scale_distSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type featureList(featureListSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xtest(XtestSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mcov(mcovSEXP);
    Rcpp::traits::input_parameter< bool >::type S_scale_dist(S_scale_distSEXP);
    rcpp_result_gen = Rcpp::wrap(gen_Mahlanobis_dist_cpp(featureList, Xtrain, Xtest, mcov, S_scale_dist));
    return rcpp_result_gen;
END_RCPP
}
// impute_cpp
NumericMatrix impute_cpp(IntegerVector ID, IntegerVector Comb, NumericMatrix Xtrain, NumericMatrix Xtest, IntegerMatrix S);
RcppExport SEXP _shapr_impute_cpp(SEXP IDSEXP, SEXP CombSEXP, SEXP XtrainSEXP, SEXP XtestSEXP, SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type ID(IDSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Comb(CombSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xtest(XtestSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(impute_cpp(ID, Comb, Xtrain, Xtest, S));
    return rcpp_result_gen;
END_RCPP
}
// weighted_matrix
arma::mat weighted_matrix(List features, int m, int n);
RcppExport SEXP _shapr_weighted_matrix(SEXP featuresSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type features(featuresSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(weighted_matrix(features, m, n));
    return rcpp_result_gen;
END_RCPP
}
// feature_matrix_cpp
NumericMatrix feature_matrix_cpp(List features, int nfeatures);
RcppExport SEXP _shapr_feature_matrix_cpp(SEXP featuresSEXP, SEXP nfeaturesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type features(featuresSEXP);
    Rcpp::traits::input_parameter< int >::type nfeatures(nfeaturesSEXP);
    rcpp_result_gen = Rcpp::wrap(feature_matrix_cpp(features, nfeatures));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_shapr_H_cpp", (DL_FUNC) &_shapr_H_cpp, 4},
    {"_shapr_distance_cpp", (DL_FUNC) &_shapr_distance_cpp, 2},
    {"_shapr_prepare_gen_Mahlanobis_dist_cpp_old", (DL_FUNC) &_shapr_prepare_gen_Mahlanobis_dist_cpp_old, 3},
    {"_shapr_gen_Mahlanobis_dist_cpp", (DL_FUNC) &_shapr_gen_Mahlanobis_dist_cpp, 5},
    {"_shapr_impute_cpp", (DL_FUNC) &_shapr_impute_cpp, 5},
    {"_shapr_weighted_matrix", (DL_FUNC) &_shapr_weighted_matrix, 3},
    {"_shapr_feature_matrix_cpp", (DL_FUNC) &_shapr_feature_matrix_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_shapr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
